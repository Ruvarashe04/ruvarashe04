/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.mycompany.mybank;

import javax.swing.JOptionPane;
import java.math.RoundingMode;

/**
 *
 * @author hp
 */
public class DepositMenu extends javax.swing.JDialog {
    
    private  Customer customer = null;
    private Object amountField;
    private Object Bank;
   

    /**
     * Creates new form DepositMenu
     */
    @SuppressWarnings("SillyAssignment")
    public DepositMenu(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        setLocationRelativeTo(parent);
        this.customer = customer;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        depositLabel = new javax.swing.JLabel();
        depositField = new javax.swing.JTextField();
        depositButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(2, 2, 5, 5));

        depositLabel.setText("Deposit Amount");
        getContentPane().add(depositLabel);
        getContentPane().add(depositField);

        depositButton.setText("Deposit");
        depositButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depositButtonActionPerformed(evt);
            }
        });
        getContentPane().add(depositButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        getContentPane().add(cancelButton);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
       this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void depositButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depositButtonActionPerformed
        StringBuilder warnings = new StringBuilder();
        //Verify the deposit is not empty
        if (depositField.getText().isEmpty()) {
            warnings.append("Deposit amount is required.\n");
        } else {
            double amount = 0;
            //Verify the deposit is a positive number
            try {
                amount = round(Double.parseDouble(depositField.getText()), 2);
                int result = JOptionPane.showConfirmDialog(this, "Deposit $" + String.format("%.2f", amount) + " to the account?\nInterest Earned: $" + String.format("%.2f", (customer.getAccount().getInterest() * amount)));
                if (result == JOptionPane.OK_OPTION) {
                    try {
                        //Make the deposit
                        customer.getAccount().deposit(amount);
                        this.dispose();
                    } catch (InvalidAmountException ex) {
                        warnings.append("Deposit amount is invalid.\n");
                    }
                    
                }
            } catch (NumberFormatException ex) {
                warnings.append("Deposit must be a number.\n");
            }
        }
        if (warnings.length() > 0) {
            JOptionPane.showMessageDialog(this, warnings.toString(), "Deposit Warnings", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_depositButtonActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton depositButton;
    private javax.swing.JTextField depositField;
    private javax.swing.JLabel depositLabel;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private double round(double parseDouble, int i) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
